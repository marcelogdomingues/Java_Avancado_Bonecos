/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.bonecos.kusco.j2ee.delegate;

import com.bonecos.kusco.dao.*;
import com.bonecos.kusco.dto.*;
import com.bonecos.kusco.exceptions.*;
import com.bonecos.kusco.j2ee.session.*;
import java.rmi.RemoteException;
import java.math.*;
import java.util.Date;
import javax.ejb.*;

public class ClientesbonecosDelegate implements ClientesbonecosDao
{
	protected ClientesbonecosSession session;

	protected int maxRows;

	/**
	 * Method 'ClientesbonecosDelegate'
	 * 
	 * @param session
	 */
	public ClientesbonecosDelegate(final ClientesbonecosSession session)
	{
		this.session = session;
	}

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows)
	{
		this.maxRows = maxRows;
	}

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows()
	{
		return maxRows;
	}

	/** 
	 * Inserts a new row in the CLIENTESBONECOS table.
	 */
	public ClientesbonecosPk insert(Clientesbonecos dto) throws ClientesbonecosDaoException
	{
		try {
			return session.insert(dto);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/** 
	 * Updates a single row in the CLIENTESBONECOS table.
	 */
	public void update(ClientesbonecosPk pk, Clientesbonecos dto) throws ClientesbonecosDaoException
	{
		try {
			session.update(pk, dto);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/** 
	 * Deletes a single row in the CLIENTESBONECOS table.
	 */
	public void delete(ClientesbonecosPk pk) throws ClientesbonecosDaoException
	{
		try {
			session.delete(pk);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findByPrimaryKey'
	 * 
	 * @param pk
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos
	 */
	public Clientesbonecos findByPrimaryKey(ClientesbonecosPk pk) throws ClientesbonecosDaoException
	{
		try {
			return session.findByPrimaryKey(pk);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findByPrimaryKey'
	 * 
	 * @param idCliente
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos
	 */
	public Clientesbonecos findByPrimaryKey(long idCliente) throws ClientesbonecosDaoException
	{
		try {
			return session.findByPrimaryKey(idCliente);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findAll'
	 * 
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findAll() throws ClientesbonecosDaoException
	{
		try {
			return session.findAll();
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findWhereIdClienteEquals'
	 * 
	 * @param idCliente
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findWhereIdClienteEquals(long idCliente) throws ClientesbonecosDaoException
	{
		try {
			return session.findWhereIdClienteEquals(idCliente);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findWhereNumeroCcEquals'
	 * 
	 * @param numeroCc
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findWhereNumeroCcEquals(long numeroCc) throws ClientesbonecosDaoException
	{
		try {
			return session.findWhereNumeroCcEquals(numeroCc);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findWhereNomeEquals'
	 * 
	 * @param nome
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findWhereNomeEquals(String nome) throws ClientesbonecosDaoException
	{
		try {
			return session.findWhereNomeEquals(nome);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findWhereMoradaEquals'
	 * 
	 * @param morada
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findWhereMoradaEquals(String morada) throws ClientesbonecosDaoException
	{
		try {
			return session.findWhereMoradaEquals(morada);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findWhereDataNascimentoEquals'
	 * 
	 * @param dataNascimento
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findWhereDataNascimentoEquals(Date dataNascimento) throws ClientesbonecosDaoException
	{
		try {
			return session.findWhereDataNascimentoEquals(dataNascimento);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findWhereDataInsercaoEquals'
	 * 
	 * @param dataInsercao
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findWhereDataInsercaoEquals(Date dataInsercao) throws ClientesbonecosDaoException
	{
		try {
			return session.findWhereDataInsercaoEquals(dataInsercao);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findWhereGeneroEquals'
	 * 
	 * @param genero
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findWhereGeneroEquals(String genero) throws ClientesbonecosDaoException
	{
		try {
			return session.findWhereGeneroEquals(genero);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findByDynamicSelect'
	 * 
	 * @param sql
	 * @param sqlParams
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findByDynamicSelect(String sql, Object[] sqlParams) throws ClientesbonecosDaoException
	{
		try {
			return session.findByDynamicSelect(sql, sqlParams);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

	/**
	 * Method 'findByDynamicWhere'
	 * 
	 * @param sql
	 * @param sqlParams
	 * @throws ClientesbonecosDaoException
	 * @return Clientesbonecos[]
	 */
	public Clientesbonecos[] findByDynamicWhere(String sql, Object[] sqlParams) throws ClientesbonecosDaoException
	{
		try {
			return session.findByDynamicWhere(sql, sqlParams);
		}
		catch (ClientesbonecosDaoException daoException) {
			throw daoException;
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new ClientesbonecosDaoException( ex.getMessage() );
		}
		
	}

}
